{
  "info": {
    "name": "Task Management API",
    "description": "GraphQL API for task management with authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:4000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "last_task_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.register && response.data.register.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.register.token);",
                  "        console.log('Auth token saved:', response.data.register.token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation Register($input: RegisterInput!) { register(input: $input) { token user { id username email createdAt } } }\",\n  \"variables\": {\n    \"input\": {\n      \"username\": \"johndoe\",\n      \"email\": \"john@example.com\",\n      \"password\": \"securepassword123\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.login && response.data.login.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.login.token);",
                  "        console.log('Auth token saved:', response.data.login.token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) { login(input: $input) { token user { id username email createdAt } } }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"john@example.com\",\n      \"password\": \"securepassword123\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Get Current User (Me)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query Me { me { id username email createdAt } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Get All Tasks",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetTasks { tasks { id title description status userId createdAt updatedAt } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetTask($id: ID!) { task(id: $id) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"id\": \"TASK_ID_HERE\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Create Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.createTask && response.data.createTask.id) {",
                  "        pm.collectionVariables.set('last_task_id', response.data.createTask.id);",
                  "        console.log('Task ID saved:', response.data.createTask.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation CreateTask($input: CreateTaskInput!) { createTask(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"title\": \"Complete project documentation\",\n      \"description\": \"Write comprehensive documentation for the API\",\n      \"status\": \"TODO\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Update Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation UpdateTask($input: UpdateTaskInput!) { updateTask(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"id\": \"{{last_task_id}}\",\n      \"title\": \"Updated: Complete project documentation\",\n      \"description\": \"Write comprehensive documentation for the API - updated\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Archive Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation ArchiveTask($id: ID!) { archiveTask(id: $id) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"id\": \"{{last_task_id}}\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Update Task Status",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation UpdateTaskStatus($input: UpdateTaskStatusInput!) { updateTaskStatus(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"id\": \"{{last_task_id}}\",\n      \"status\": \"IN_PROGRESS\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Task Examples by Status",
      "item": [
        {
          "name": "Create TODO Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation CreateTask($input: CreateTaskInput!) { createTask(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"title\": \"Setup development environment\",\n      \"description\": \"Install Node.js, PostgreSQL, and configure the project\",\n      \"status\": \"TODO\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Create IN_PROGRESS Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation CreateTask($input: CreateTaskInput!) { createTask(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"title\": \"Implement GraphQL resolvers\",\n      \"description\": \"Create resolvers for user authentication and task management\",\n      \"status\": \"IN_PROGRESS\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Create DONE Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation CreateTask($input: CreateTaskInput!) { createTask(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"title\": \"Setup TypeScript configuration\",\n      \"description\": \"Configure TypeScript, ESLint, and Prettier\",\n      \"status\": \"DONE\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Task Status Management",
      "item": [
        {
          "name": "Update Task Status to IN_PROGRESS",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation UpdateTaskStatus($input: UpdateTaskStatusInput!) { updateTaskStatus(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"id\": \"{{last_task_id}}\",\n      \"status\": \"IN_PROGRESS\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Update Task Status to DONE",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation UpdateTaskStatus($input: UpdateTaskStatusInput!) { updateTaskStatus(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"id\": \"{{last_task_id}}\",\n      \"status\": \"DONE\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Try to Archive via UpdateTaskStatus (Should Fail)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation UpdateTaskStatus($input: UpdateTaskStatusInput!) { updateTaskStatus(input: $input) { id title description status userId createdAt updatedAt } }\",\n  \"variables\": {\n    \"input\": {\n      \"id\": \"{{last_task_id}}\",\n      \"status\": \"ARCHIVED\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Error Scenarios",
      "item": [
        {
          "name": "Access Task Without Auth",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetTasks { tasks { id title description status } }\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Register Duplicate Email",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation Register($input: RegisterInput!) { register(input: $input) { token user { id username email } } }\",\n  \"variables\": {\n    \"input\": {\n      \"username\": \"anotherjohn\",\n      \"email\": \"john@example.com\",\n      \"password\": \"anotherpassword\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Login Invalid Credentials",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"mutation Login($input: LoginInput!) { login(input: $input) { token user { id username email } } }\",\n  \"variables\": {\n    \"input\": {\n      \"email\": \"john@example.com\",\n      \"password\": \"wrongpassword\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        },
        {
          "name": "Get Non-existent Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"query GetTask($id: ID!) { task(id: $id) { id title description status } }\",\n  \"variables\": {\n    \"id\": \"non-existent-id\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/graphql",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "graphql"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "health"
          ]
        }
      }
    }
  ]
}